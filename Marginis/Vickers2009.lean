import Mathlib
/-!

## Localic completion of generalized metric spaces II: Powerlocales

[STEVEN VICKERS](http://logicandanalysis.org/index.php/jla/article/view/34)

The finite powerset of a set.
We show that in the presence of a `Fintype` it is the same as the ordinary powerset,
and in the case of `‚Ñï, ‚Ñö, ‚Ñù, ‚ÑÇ` it is not the same.

-/

axiom X : Type
def setSetFin X := { A : Set X | Set.Finite A}

-- The ordinary powerset can be defined in these two, identical, ways:
def setSetUniv X := (Set.univ : Set (Set X))
def powersetUniv X := ùí´ (Set.univ : Set X)

example : setSetUniv X = powersetUniv X := by
  unfold setSetUniv powersetUniv
  simp only [Set.powerset_univ]

example [Fintype X] : setSetFin X = setSetUniv X := by
  ext x
  constructor
  . intro; trivial
  . intro; exact Set.toFinite x

/-- The finite powerset of an infinite set `X` is distinct from the powerset of `X`. -/
lemma finite_powerset_improper {X : Type} [Infinite X]: setSetFin X ‚â† setSetUniv X := by
  intro hc
  have h‚ÇÄ: ‚àÄ S, S ‚àà setSetFin X ‚Üî S ‚àà setSetUniv X := by
    unfold setSetFin setSetUniv at *
    simp_all
  have h‚ÇÅ: Set.univ ‚àà setSetUniv X := by unfold setSetUniv; simp
  have h‚ÇÇ: Set.univ ‚àà setSetFin X := by rw [h‚ÇÄ];exact h‚ÇÅ
  have := Set.finite_univ_iff.mp h‚ÇÇ
  exact not_finite X

example : setSetFin ‚Ñï ‚â† setSetUniv ‚Ñï := finite_powerset_improper
example : setSetFin ‚Ñ§ ‚â† setSetUniv ‚Ñ§ := finite_powerset_improper
example : setSetFin ‚Ñö ‚â† setSetUniv ‚Ñö := finite_powerset_improper

/-- There are infinitely many real numbers. -/
instance : Infinite ‚Ñù := Infinite.of_injective (Œª x : ‚Ñï ‚Ü¶ x)
  fun _ _ => Nat.cast_inj.mp

/-- There are infinitely many complex numbers. -/
instance : Infinite ‚ÑÇ := Infinite.of_injective (Œª x : ‚Ñù ‚Ü¶ x)
  fun _ _ => Complex.ofReal_inj.mp

example : setSetFin ‚Ñù ‚â† setSetUniv ‚Ñù := finite_powerset_improper

example : setSetFin ‚ÑÇ ‚â† setSetUniv ‚ÑÇ := finite_powerset_improper
